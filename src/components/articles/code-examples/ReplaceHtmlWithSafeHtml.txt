const { resolve } = require('path')
const { readFile, writeFile } = require('fs').promises
const { getFiles } = require('./utils')

const filesToInclude = 'src'

function find(content) {
  return content.includes('{@html')
}

function replace(fileName, content) {
  const importSafeHtml = `import SafeHtml from 'components/SafeHtml.svelte'`
  if (!content.includes(importSafeHtml))
    content = content.replace('<script>', `<script>\n  ${importSafeHtml}`)
  content = content.replace(/{@html\s([^}]+)}/g, '<SafeHtml value={$1} />')
  return content
}

function fileNameFilter(file) {
  return file.endsWith('.svelte') //|| file.endsWith('.js')
}

main()

async function main() {
  const filesToIncludeDir = resolve(__dirname, '..', filesToInclude)
  const files = await getFiles(filesToIncludeDir)
  const filesToSearch = files.filter(fileNameFilter)
  console.log(`Searching ${filesToSearch.length} file(s)...`)
  let modifiedCount = 0
  await Promise.all(filesToSearch.map(async file => {
    let content = (await readFile(file)).toString()
    if (find(content)) {
      console.log(file)
      content = replace(file, content)
      await writeFile(file, content)
      modifiedCount++
    }
  }))
  console.log(`${modifiedCount} files were modified.`)
}